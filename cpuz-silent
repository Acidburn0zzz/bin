#!/bin/bash

# Temp, voltage, and fan speed data collection.
# Specific to my P8Z77-V Pro
# Edit to match your hardware

tmpfile=/tmp/.sensors.txt		# temp output
verbose=/tmp/.verbose.txt		# verbose temp output needed for three decimal points
logfile=/scratch/stats.csv	# data file
limit=86400									# number of times to run
wait=2											# delay in sec before taking a new reading

###

if [ ! -x /usr/bin/sensors ]; then
	echo "Install and configure lm-sensors."
	exit 0
fi

x=0
while [ "$x" -lt "$limit" ]; do
	x=$(( $x + 1 ))

	sensors >$tmpfile && sensors -u >$verbose

	# temps of interest
	phys=$(grep Physical $tmpfile | cut -c 18-21)
	c0=$(grep "Core 0" $tmpfile | cut -c18-21)
	c1=$(grep "Core 1" $tmpfile | cut -c18-21)
	c2=$(grep "Core 2" $tmpfile | cut -c18-21)
	c3=$(grep "Core 3" $tmpfile | cut -c18-21)

	# voltages of interest
	vcc=$(grep in0_input $verbose | cut -c14-18)

	# fan speeds and pwm values of interest
	fan4=$(grep fan4 $tmpfile | cut -c24-27)
	pwm4=$(cat /sys/class/hwmon/hwmon3/device/pwm4)
	per4=$(echo "scale=2; $pwm4/2.55" | bc)

	fan5=$(grep fan5 $tmpfile | cut -c24-27)
	pwm5=$(cat /sys/class/hwmon/hwmon3/device/pwm5)
	per5=$(echo "scale=2; $pwm5/2.55" | bc)

	# date time stamp for log file
	dts=$(date +"%m-%d-%y %r")

	# write out log file
	[[ ! -f $logfile ]] && echo "dts,vcc,temp,core0,core1,core2,core3,120mm_rpm,120mm_pwm,140mm_rpm,140mm_pwm" > $logfile
	echo "$dts,$vcc,$phys,$c0,$c1,$c2,$c3,$fan4,$pwm4,$fan5,$pwm5" >> $logfile
	
	# pause requested amount before re-reading
	sleep "$wait"s
done
